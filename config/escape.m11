; control page
; 0000 control bits
;       0 - seek
;       1 - jump
;
; 0004 -
; 0008 - 
; 000c -
; 0010 seek vector x
; 0014 seek vector y
; 0018 seek vector z
; 001c -
; 0020 .. 00ff reserved

; signal record (64 bytes)
; 0000 flags
; 0004 mass
; 0008 -
; 000c -
; 0010 position-x
; 0014 position-y
; 0018 position-z
; 001c -
; 0020 velocity-x
; 0024 velocity-y
; 0028 velocity-z
; 002c -
; 0030
; 0034
; 0038
; 003c

signal_base = 4096
signal_bound = 16384
signal_record_size = 64

control_base = 256

escape:
    
    clrv v0     ; hostile mass vector
    clrf ac0    ; total hostile mass
    clr r2      ; set if any hostiles found

    ; signals start at 16#1000#
    mov #signal_base, r0
1:  mov (r0),r1
    bit #256, r1    ; bit 8 is clear at end of signal table
    beq 3
    com r1
    bit #19, r1     ; bit 1 is active flag, bit 2 is hostile flag, bit 4 is military flag, so active military hostiles have all three set
    bne 2

    mov #1, r2
    ldv v1, 16(r0)  ; (signal+16) is address of position vector
    ldv v2, 32(r0)  ; (signal+32) is address of velocity vector
    addv v2, v1     ; addv requires two vector register arguments 
    ldf ac1, 4(r0)  ; (signal+4) is address of mass component
    mulfv ac1, v1
    addv v1, v0
    addf ac1, ac0
    
2: add #signal_record_size, r0
   cmp r0, #signal_bound
   bne 1

3: tst r2
   bne 4
   negv v0
   mov #control_base, r0
   stv v0, 16(r0)
   bis #1, (r0)
4: br escape
